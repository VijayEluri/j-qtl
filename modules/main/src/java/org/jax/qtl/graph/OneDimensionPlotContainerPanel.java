/*
 * Copyright (c) 2009 The Jackson Laboratory
 * 
 * This software was developed by Gary Churchill's Lab at The Jackson
 * Laboratory (see http://research.jax.org/faculty/churchill).
 *
 * This is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this software.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.jax.qtl.graph;

import org.jax.qtl.gui.SaveGraphImageAction;

/**
 * A simple graph container that has pretty general capabilities that you'd
 * want for almost any graph.
 * @author <A HREF="mailto:keith.sheppard@jax.org">Keith Sheppard</A>
 */
public class OneDimensionPlotContainerPanel extends javax.swing.JPanel
{
    /**
     * every {@link java.io.Serializable} has one of these
     */
    private static final long serialVersionUID = 620035769691305930L;
    
    private final OneDimensionPlot oneDimensionPlot;

    /**
     * Constructor
     * @param oneDimensionPlot
     *          the plot
     */
    public OneDimensionPlotContainerPanel(
            OneDimensionPlot oneDimensionPlot)
    {
        this.oneDimensionPlot = oneDimensionPlot;
        this.initComponents();
        
        this.postGuiInit();
    }
    
    /**
     * Take care of the GUI initialization that isn't done by the GUI builder
     */
    private void postGuiInit()
    {
        this.toolbar.add(new EditOneDimensionPlotSettingsAction(
                this.oneDimensionPlot));
        this.toolbar.add(new SaveGraphImageAction(
                this.oneDimensionPlot));
    }

    /**
     * This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("all")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toolbar = new javax.swing.JToolBar();
        graphPanelDownCast = this.oneDimensionPlot;

        setLayout(new java.awt.BorderLayout());

        toolbar.setRollover(true);
        add(toolbar, java.awt.BorderLayout.NORTH);
        add(graphPanelDownCast, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel graphPanelDownCast;
    private javax.swing.JToolBar toolbar;
    // End of variables declaration//GEN-END:variables
    
}
